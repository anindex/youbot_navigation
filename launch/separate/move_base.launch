<launch>
  <!-- Argument Local Planner (Select one) -->
  <arg name="base_local_planner"  default="false"/>
  <arg name="dwa_local_planner"   default="true"/>
  <arg name="eband_local_planner" default="false"/>
  <arg name="teb_local_planner"   default="false"/>

  <!-- Argument Global Planner (Select one) -->
  <arg name="carrot_planner" default="false"/>
  <arg name="navfn"          default="false"/>
  <arg name="global_planner" default="true"/>

  <!-- Miscellaneous -->
  <arg name="use_odom_only"           default="false"/>
  <arg name="use_static_map"          default="false"/>
  <arg name="use_obstacles_detection" default="false"/>
  <arg name="use_trajectory_server"   default="true"/>

  <!-- Node Move Base -->
  <node pkg="move_base" type="move_base" name="move_base" respawn="false" output="screen">
    <remap from="cmd_vel" to="cmd_vel_navigation"/>

    <rosparam file="$(find youbot_navigation)/config/move_base_params.yaml" command="load"/>
    <rosparam file="$(find youbot_navigation)/config/recovery_params.yaml" command="load"/>
  </node>

  <!-- Parameter Local Planner -->
  <group ns="move_base" if="$(arg base_local_planner)">
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>
    <rosparam file="$(find youbot_navigation)/config/local_planner/base_local_planner_params.yaml" command="load"/>
  </group>
  <group ns="move_base" if="$(arg dwa_local_planner)">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS"/>
    <rosparam file="$(find youbot_navigation)/config/local_planner/dwa_local_planner_params.yaml" command="load"/>
  </group>
  <group ns="move_base" if="$(arg eband_local_planner)">
    <param name="base_local_planner" value="eband_local_planner/EBandPlannerROS"/>
    <rosparam file="$(find youbot_navigation)/config/local_planner/eband_local_planner_params.yaml" command="load"/>
  </group>
  <group ns="move_base" if="$(arg teb_local_planner)">
    <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS"/>
    <rosparam file="$(find youbot_navigation)/config/local_planner/teb_local_planner_params.yaml" command="load"/>
  </group>

  <!-- Parameter Global Planner -->
  <group ns="move_base" if="$(arg carrot_planner)">
    <param name="base_global_planner" value="carrot_planner/CarrotPlanner"/>
    <rosparam file="$(find youbot_navigation)/config/global_planner/carrot_planner_params.yaml" command="load"/>
  </group>
  <group ns="move_base" if="$(arg navfn)">
    <param name="base_global_planner" value="navfn/NavfnROS"/>
    <rosparam file="$(find youbot_navigation)/config/global_planner/navfn_params.yaml" command="load"/>
  </group>
  <group ns="move_base" if="$(arg global_planner)">
    <param name="base_global_planner" value="global_planner/GlobalPlanner"/>
    <rosparam file="$(find youbot_navigation)/config/global_planner/global_planner_params.yaml" command="load"/>
  </group>

  <!-- Parameter Costmaps -->
  <group ns="move_base" if="$(arg use_static_map)">
    <rosparam file="$(find youbot_navigation)/config/static/costmap_common_params.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find youbot_navigation)/config/static/costmap_common_params.yaml" command="load" ns="global_costmap"/>
    <rosparam file="$(find youbot_navigation)/config/static/local_costmap_params.yaml"  command="load"/>
    <rosparam file="$(find youbot_navigation)/config/static/global_costmap_params.yaml" command="load"/>
  </group>
  <group ns="move_base" unless="$(arg use_static_map)">
    <rosparam file="$(find youbot_navigation)/config/online/costmap_common_params.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find youbot_navigation)/config/online/costmap_common_params.yaml" command="load" ns="global_costmap"/>
    <rosparam file="$(find youbot_navigation)/config/online/local_costmap_params.yaml"  command="load"/>
    <rosparam file="$(find youbot_navigation)/config/online/global_costmap_params.yaml" command="load"/>
  </group>

  <group ns="move_base" if="$(arg use_obstacles_detection)">
    <rosparam file="$(find youbot_navigation)/config/obstacles_detection_params.yaml"/>
  </group>

  <!-- Nodelets Obstacles Detection -->
  <group ns="camera" if="$(arg use_obstacles_detection)">
    <node pkg="nodelet" type="nodelet" name="data_throttle" args="load rtabmap_ros/data_throttle camera_nodelet_manager" output="screen">
      <!-- Input -->
      <remap from="rgb/image_in" to="rgb/image_rect_color"/>
      <remap from="depth/image_in" to="depth_registered/image_raw"/>
      <remap from="rgb/camera_info_in" to="rgb/camera_info"/>

      <!-- Output -->
      <remap from="rgb/image_out" to="rgb/image_rect_color_throttled"/>
      <remap from="depth/image_out" to="depth_registered/image_raw_throttled"/>
      <remap from="rgb/camera_info_out" to="rgb/camera_info_throttled"/>

      <param name="rate" type="double" value="5.0"/>
    </node>

    <node pkg="nodelet" type="nodelet" name="points_cloud_xyz" args="load rtabmap_ros/point_cloud_xyz camera_nodelet_manager" output="screen">
      <!-- Input -->
      <remap from="depth/image" to="depth_registered/image_raw_throttled"/>
      <remap from="depth/camera_info" to="rgb/camera_info_throttled"/>

      <!-- Output -->
      <remap from="cloud" to="cloud_xyz"/>

      <param name="decimation" type="int" value="1"/>
      <param name="max_depth" type="double" value="3.0"/>
      <param name="voxel_size" type="double" value="0.02"/>
    </node>

    <node pkg="nodelet" type="nodelet" name="obstacles_detection" args="load rtabmap_ros/obstacles_detection camera_nodelet_manager" output="screen">
      <!-- Input -->
      <remap from="cloud" to="cloud_xyz"/>

      <!-- Output -->
      <remap from="obstacles" to="/cloud_obstacles"/>
      <remap from="ground" to="/cloud_ground"/>

      <param name="frame_id" type="string" value="base_footprint"/>
      <param name="map_frame_id" type="string" value="map"/>
      <param name="wait_for_transform" type="bool" value="true"/>
    </node>
  </group>

  <!-- Node Trajectory Server -->
  <group if="$(arg use_trajectory_server)">
    <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="trajectory_server">
      <param name="target_frame_name" value="odom" if="$(arg use_odom_only)"/>
      <param name="target_frame_name" value="map" unless="$(arg use_odom_only)"/>
      <param name="source_frame_name" value="base_footprint"/>
      <param name="trajectory_update_rate" value="4.0"/>
      <param name="trajectory_publish_rate" value="1.0"/>
    </node>
  </group>

</launch>
